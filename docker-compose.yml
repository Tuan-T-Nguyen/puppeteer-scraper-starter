version: '3.9'
services:
  api:
    build: .
    working_dir: /api
    volumes:
      - .:/api
    command: npm run dev
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      compile:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - PORT=${PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - REDIS_URL=${REDIS_URL}
  consumer:
    build: .
    working_dir: /consumer
    volumes:
      - .:/consumer
    command: npm run dev:consumer
    scale: 1
    depends_on:
      compile:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
  compile:
    image: node:latest
    working_dir: /source
    volumes:
      - .:/source
    command: npm run build:watch
    healthcheck:
      test: bash -c "[ -f dist/index.js ]"
      interval: 10s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: bitnami/rabbitmq:latest
    environment:
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q check_running
    ports:
      - '${RABBITMQ_ADMIN_WEB_PORT}:${RABBITMQ_ADMIN_WEB_PORT}'
  redis:
    image: redis:latest
    healthcheck:
      test: redis-cli ping
